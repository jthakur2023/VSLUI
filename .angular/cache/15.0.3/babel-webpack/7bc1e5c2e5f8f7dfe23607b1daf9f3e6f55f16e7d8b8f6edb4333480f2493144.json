{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./_services/storage.service\";\nimport * as i2 from \"./_services/auth.service\";\nimport * as i3 from \"./_shared/event-bus.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction AppComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 10);\n    i0.ɵɵtext(1, \"View Your Listings \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_a_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11);\n    i0.ɵɵtext(1, \"Add Listing\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_a_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 12);\n    i0.ɵɵtext(1, \"Browse Listings\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ul_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 13)(1, \"li\", 4)(2, \"a\", 14);\n    i0.ɵɵtext(3, \"Sign Up\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"li\", 4)(5, \"a\", 15);\n    i0.ɵɵtext(6, \"Login\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_ul_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 13)(1, \"li\", 4)(2, \"a\", 16);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"li\", 4)(5, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function AppComponent_ul_12_Template_a_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.logout());\n    });\n    i0.ɵɵtext(6, \"LogOut\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.username);\n  }\n}\nexport class AppComponent {\n  constructor(storageService, authService, eventBusService, router) {\n    this.storageService = storageService;\n    this.authService = authService;\n    this.eventBusService = eventBusService;\n    this.router = router;\n    this.roles = [];\n    this.isLoggedIn = false;\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.username = user.username;\n    }\n    this.eventBusSub = this.eventBusService.on('logout', () => {\n      this.logout();\n    });\n  }\n  logout() {\n    this.authService.logout().subscribe({\n      next: res => {\n        console.log(res);\n        this.storageService.clean();\n        window.location.reload();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.router.navigate(['./home']);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EventBusService), i0.ɵɵdirectiveInject(i4.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[\"id\", \"app\"], [1, \"navbar\", \"navbar-expand\", \"navbar-dark\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"routerLinkActive\", \"active\", 1, \"navbar-nav\", \"mr-auto\"], [1, \"nav-item\"], [\"href\", \"/listings\", \"class\", \"nav-link\", \"routerLink\", \"listings\", 4, \"ngIf\"], [\"href\", \"/add\", \"class\", \"nav-link\", \"routerLink\", \"add\", 4, \"ngIf\"], [\"href\", \"/allListings\", \"class\", \"nav-link\", \"routerLink\", \"allListings\", 4, \"ngIf\"], [\"class\", \"navbar-nav ml-auto\", 4, \"ngIf\"], [1, \"container\"], [\"href\", \"/listings\", \"routerLink\", \"listings\", 1, \"nav-link\"], [\"href\", \"/add\", \"routerLink\", \"add\", 1, \"nav-link\"], [\"href\", \"/allListings\", \"routerLink\", \"allListings\", 1, \"nav-link\"], [1, \"navbar-nav\", \"ml-auto\"], [\"href\", \"/register\", \"routerLink\", \"register\", 1, \"nav-link\"], [\"href\", \"/login\", \"routerLink\", \"login\", 1, \"nav-link\"], [\"href\", \"/profile\", \"routerLink\", \"profile\", 1, \"nav-link\"], [\"href\", \"\", 1, \"nav-link\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"VSL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ul\", 3)(5, \"li\", 4);\n      i0.ɵɵtemplate(6, AppComponent_a_6_Template, 2, 0, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"li\", 4);\n      i0.ɵɵtemplate(8, AppComponent_a_8_Template, 2, 0, \"a\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"li\", 4);\n      i0.ɵɵtemplate(10, AppComponent_a_10_Template, 2, 0, \"a\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, AppComponent_ul_11_Template, 7, 0, \"ul\", 8);\n      i0.ɵɵtemplate(12, AppComponent_ul_12_Template, 7, 1, \"ul\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵelement(14, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i5.NgIf, i4.RouterOutlet, i4.RouterLink, i4.RouterLinkActive],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAKQA,6BAA8E;IAAAA,mCAAmB;IAAAA,iBAAI;;;;;IAGrGA,6BAAoE;IAAAA,2BAAW;IAAAA,iBAAI;;;;;IAGnFA,6BAAoF;IAAAA,+BAAe;IAAAA,iBAAI;;;;;IAI3GA,8BAAmD;IAEYA,uBAAO;IAAAA,iBAAI;IAExEA,6BAAqB;IACkCA,qBAAK;IAAAA,iBAAI;;;;;;IAIlEA,8BAAkD;IAEWA,YAAc;IAAAA,iBAAI;IAE7EA,6BAAqB;IACMA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAI;;;;IAHGA,eAAc;IAAdA,qCAAc;;;ACd/E,OAAM,MAAOC,YAAY;EAOvBC,YACUC,cAA8B,EAC9BC,WAAwB,EACxBC,eAAgC,EAChCC,MAAc;IAHd,mBAAc,GAAdH,cAAc;IACd,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;IAVR,UAAK,GAAa,EAAE;IAC5B,eAAU,GAAG,KAAK;EAUf;EAEHC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,cAAc,CAACK,UAAU,EAAE;IAElD,IAAI,IAAI,CAACA,UAAU,EAAE;MACnB,MAAMC,IAAI,GAAG,IAAI,CAACN,cAAc,CAACO,OAAO,EAAE;MAC1C,IAAI,CAACC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;;IAG/B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACP,eAAe,CAACQ,EAAE,CAAC,QAAQ,EAAE,MAAK;MACxD,IAAI,CAACC,MAAM,EAAE;IACf,CAAC,CAAC;EACJ;EAEAA,MAAM;IACJ,IAAI,CAACV,WAAW,CAACU,MAAM,EAAE,CAACC,SAAS,CAAC;MAClCC,IAAI,EAAEC,GAAG,IAAG;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACd,cAAc,CAACiB,KAAK,EAAE;QAE3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAClB;KACD,CAAC;IACF,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AAxCWzB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZzB/B,8BAAc;MAEuBA,mBAAG;MAAAA,iBAAI;MACxCA,6BAAyD;MAErDA,yDAAqG;MACvGA,iBAAK;MACLA,6BAAqB;MACnBA,yDAAmF;MACrFA,iBAAK;MACLA,6BAAqB;MACnBA,2DAAuG;MACzGA,iBAAK;MAGPA,6DAOK;MAELA,6DAOK;MACPA,iBAAM;MAENA,+BAAuB;MACrBA,iCAA+B;MACjCA,iBAAM;;;MA/BsCA,eAAgB;MAAhBA,qCAAgB;MAGrBA,eAAgB;MAAhBA,qCAAgB;MAGRA,eAAgB;MAAhBA,qCAAgB;MAI7BA,eAAiB;MAAjBA,sCAAiB;MASjBA,eAAgB;MAAhBA,qCAAgB","names":["i0","AppComponent","constructor","storageService","authService","eventBusService","router","ngOnInit","isLoggedIn","user","getUser","username","eventBusSub","on","logout","subscribe","next","res","console","log","clean","window","location","reload","error","err","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/lakshman/projects/VSLUI/src/app/app.component.html","/Users/lakshman/projects/VSLUI/src/app/app.component.ts"],"sourcesContent":["<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">VSL</a>\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/listings\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"listings\">View Your Listings </a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/add\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"add\">Add Listing</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/allListings\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"allListings\">Browse Listings</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { StorageService } from './_services/storage.service';\nimport { AuthService } from './_services/auth.service';\nimport { EventBusService } from './_shared/event-bus.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private roles: string[] = [];\n  isLoggedIn = false;\n  username?: string;\n\n  eventBusSub?: Subscription;\n\n  constructor(\n    private storageService: StorageService,\n    private authService: AuthService,\n    private eventBusService: EventBusService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.username = user.username;\n    }\n\n    this.eventBusSub = this.eventBusService.on('logout', () => {\n      this.logout();\n    });\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: res => {\n        console.log(res);\n        this.storageService.clean();\n\n        window.location.reload();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.router.navigate(['./home']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}