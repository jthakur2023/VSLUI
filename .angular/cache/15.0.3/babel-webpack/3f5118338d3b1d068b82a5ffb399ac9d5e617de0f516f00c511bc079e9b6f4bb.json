{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/listing.service\";\nimport * as i2 from \"src/app/services/comment.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AllListingsDetailsComponent_div_0_div_1_li_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", comment_r4.comment, \" \");\n  }\n}\nfunction AllListingsDetailsComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"Listings\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"label\")(5, \"strong\");\n    i0.ɵɵtext(6, \"Address:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\")(9, \"label\")(10, \"strong\");\n    i0.ɵɵtext(11, \"University:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\")(14, \"label\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Semester:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\")(19, \"label\")(20, \"strong\");\n    i0.ɵɵtext(21, \"Rent:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\")(24, \"label\")(25, \"strong\");\n    i0.ɵɵtext(26, \"Views:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\")(29, \"label\")(30, \"strong\");\n    i0.ɵɵtext(31, \"Picture:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(32, \"img\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 2)(34, \"h4\");\n    i0.ɵɵtext(35, \"View all Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"ul\", 3);\n    i0.ɵɵtemplate(37, AllListingsDetailsComponent_div_0_div_1_li_37_Template, 2, 1, \"li\", 4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentListing.address, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentListing.university, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentListing.semester, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentListing.rent, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentListing.views, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"http://localhost:8080/images/\", ctx_r1.currentListing.image, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.comments);\n  }\n}\nfunction AllListingsDetailsComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Please click on a Listing...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AllListingsDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AllListingsDetailsComponent_div_0_div_1_Template, 38, 7, \"div\", 0);\n    i0.ɵɵtemplate(2, AllListingsDetailsComponent_div_0_div_2_Template, 4, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentListing.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.currentListing);\n  }\n}\nexport class AllListingsDetailsComponent {\n  constructor(listingService, commentService, route, router) {\n    this.listingService = listingService;\n    this.commentService = commentService;\n    this.route = route;\n    this.router = router;\n    this.viewMode = false;\n    this.currentListing = {\n      id: '',\n      address: '',\n      university: '',\n      semester: '',\n      rent: '',\n      views: '',\n      image: ''\n    };\n    this.message = '';\n  }\n  ngOnChanges(changes) {\n    const listingId = changes['currentListing'].currentValue.id;\n    if (listingId != undefined) {\n      this.getCommentsByListingId(listingId);\n      this.updateListingViews(changes['currentListing'].currentValue);\n    }\n  }\n  ngOnInit() {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getListing(this.route.snapshot.params[\"id\"]);\n    }\n  }\n  getListing(id) {\n    this.listingService.get(id).subscribe({\n      next: data => {\n        this.currentListing = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  updateListing() {\n    this.message = '';\n    this.listingService.update(this.currentListing.id, this.currentListing).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This Listing was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  deleteListing() {\n    this.listingService.delete(this.currentListing.id).subscribe({\n      next: res => {\n        console.log(res);\n        this.router.navigate(['/Listings']);\n      },\n      error: e => console.error(e)\n    });\n  }\n  getCommentsByListingId(id) {\n    this.commentService.getCommentsByListingId(id).subscribe({\n      next: data => {\n        this.comments = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  updateListingViews(listing) {\n    this.message = '';\n    const views = parseInt(listing.views);\n    if (!isNaN(views)) {\n      listing.views = views + 1;\n    }\n    this.listingService.update(listing.id, listing).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This Listing was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n}\nAllListingsDetailsComponent.ɵfac = function AllListingsDetailsComponent_Factory(t) {\n  return new (t || AllListingsDetailsComponent)(i0.ɵɵdirectiveInject(i1.ListingService), i0.ɵɵdirectiveInject(i2.CommentService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nAllListingsDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllListingsDetailsComponent,\n  selectors: [[\"app-all-listings-details\"]],\n  inputs: {\n    viewMode: \"viewMode\",\n    currentListing: \"currentListing\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [2, \"height\", \"100px\", \"width\", \"100px\", 3, \"src\"], [1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n  template: function AllListingsDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AllListingsDetailsComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.viewMode);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AllListingsDetailsComponent","constructor","listingService","commentService","route","router","id","address","university","semester","rent","views","image","ngOnChanges","changes","listingId","currentValue","undefined","getCommentsByListingId","updateListingViews","ngOnInit","viewMode","message","getListing","snapshot","params","get","subscribe","next","data","currentListing","console","log","error","e","updateListing","update","res","deleteListing","delete","navigate","comments","listing","parseInt","isNaN","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/lakshman/projects/VSLUI/src/app/all-listings-details/all-listings-details.component.html","/Users/lakshman/projects/VSLUI/src/app/all-listings-details/all-listings-details.component.ts"],"sourcesContent":["<div *ngIf=\"viewMode\">\n    <div *ngIf=\"currentListing.id\">\n      <h4>Listings</h4>\n      <div>\n        <label><strong>Address:</strong></label> {{ currentListing.address }}\n      </div>\n      <div>\n        <label><strong>University:</strong></label>\n        {{ currentListing.university }}\n      </div>\n      <div>\n        <label><strong>Semester:</strong></label>\n        {{ currentListing.semester }}\n      </div>\n      <div>\n        <label><strong>Rent:</strong></label>\n        {{ currentListing.rent }}\n      </div>\n      <div>\n        <label><strong>Views:</strong></label>\n        {{ currentListing.views }}\n      </div>\n      <div>\n        <label><strong>Picture:</strong></label>\n        <img src=\"http://localhost:8080/images/{{currentListing.image}}\" style=\"height:100px;width:100px\"/>\n      </div>\n\n      <div class=\"col-md-6\">\n        <h4>View all Comments</h4>\n        <ul class=\"list-group\">\n          <li\n            class=\"list-group-item\"\n            *ngFor=\"let comment of comments; let i = index\"      \n          >\n            {{ comment.comment }}\n          </li>\n        </ul>\n    \n      </div>\n  \n    </div>\n  \n    <!-- <div class=\"col-md-6\">\n      <h4>View all Comments</h4>\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let comment of comments; let i = index\"      \n        >\n          {{ comment.comment }}\n        </li>\n      </ul>\n  \n    </div> -->\n\n    <div *ngIf=\"!currentListing\">\n      <br />\n      <p>Please click on a Listing...</p>\n    </div>\n  </div>\n  \n  \n  \n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { ListingService } from 'src/app/services/listing.service';\nimport { CommentService } from 'src/app/services/comment.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Listing } from 'src/app/models/Listing.model';\nimport { Comment } from '../models/comment.model';\n\n\n@Component({\n  selector: 'app-all-listings-details',\n  templateUrl: './all-listings-details.component.html',\n  styleUrls: ['./all-listings-details.component.css']\n})\nexport class AllListingsDetailsComponent {\n\n  @Input() viewMode = false;\n\n  @Input() currentListing: Listing = {\n    id: '',\n    address: '',\n    university: '',\n    semester: '',\n    rent: '',\n    views: '',\n    image: '',\n  };\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    const listingId = changes['currentListing'].currentValue.id;\n    if (listingId != undefined) {\n      this.getCommentsByListingId(listingId);\n      this.updateListingViews(changes['currentListing'].currentValue);\n    } \n  \n  }\n\n\n  message = '';\n\n  constructor(\n    private listingService: ListingService,\n    private commentService: CommentService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n  \n  comments?: Comment[];\n  \n  ngOnInit(): void {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getListing(this.route.snapshot.params[\"id\"]);\n    }\n    \n  }\n\n\n  getListing(id: string): void {\n    this.listingService.get(id)\n      .subscribe({\n        next: (data) => {\n          this.currentListing = data;\n          console.log(data);\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  updateListing(): void {\n    this.message = '';\n\n    this.listingService.update(this.currentListing.id, this.currentListing)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.message = res.message ? res.message : 'This Listing was updated successfully!';\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  deleteListing(): void {\n    this.listingService.delete(this.currentListing.id)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.router.navigate(['/Listings']);\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  getCommentsByListingId(id: string): void {\n    this.commentService.getCommentsByListingId(id)\n      .subscribe({\n        next: (data) => {\n          this.comments = data;\n          console.log(data);\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  updateListingViews(listing: Listing): void {\n    this.message = '';\n    const views = parseInt(listing.views);\n    if (!isNaN(views)) {\n      listing.views = views +1;\n    }\n\n    this.listingService.update(listing.id, listing)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.message = res.message ? res.message : 'This Listing was updated successfully!';\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}