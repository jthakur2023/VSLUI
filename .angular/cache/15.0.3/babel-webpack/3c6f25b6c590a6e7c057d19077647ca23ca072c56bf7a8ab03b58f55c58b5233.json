{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/comments';\nexport class CommentService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  getCommentsByListingId(id) {\n    return this.http.get(`${baseUrl}ByListingId/${id}`);\n  }\n  getCommentsByUserId(id) {\n    return this.http.get(`${baseUrl}ByUserId/${id}`);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n}\nCommentService.ɵfac = function CommentService_Factory(t) {\n  return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentService,\n  factory: CommentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,oCAAoC;AAKpD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAYL,OAAO,CAAC;EAC1C;EAGAM,sBAAsB,CAACC,EAAM;IAC3B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,eAAeO,EAAE,EAAE,CAAC;EAChE;EAEAC,mBAAmB,CAACD,EAAM;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,YAAYO,EAAE,EAAE,CAAC;EAC7D;EAEAF,GAAG,CAACE,EAAO;IACT,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,IAAIO,EAAE,EAAE,CAAC;EACnD;EAEAE,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAACX,OAAO,EAAEU,IAAI,CAAC;EACtC;EAEAE,MAAM,CAACL,EAAO,EAAEG,IAAS;IACvB,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,GAAGb,OAAO,IAAIO,EAAE,EAAE,EAAEG,IAAI,CAAC;EAChD;EAEAI,MAAM,CAACP,EAAO;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACW,MAAM,CAAC,GAAGd,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC7C;EAEAQ,SAAS;IACP,OAAO,IAAI,CAACZ,IAAI,CAACW,MAAM,CAACd,OAAO,CAAC;EAClC;;AAnCWC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["baseUrl","CommentService","constructor","http","getAll","get","getCommentsByListingId","id","getCommentsByUserId","create","data","post","update","put","delete","deleteAll","factory","providedIn"],"sourceRoot":"","sources":["/Users/lakshman/projects/VSLUI/src/app/services/comment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Comment } from '../models/comment.model';\n\nconst baseUrl = 'http://localhost:8080/api/comments';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Comment[]> {\n    return this.http.get<Comment[]>(baseUrl);\n  }\n\n\n  getCommentsByListingId(id:any):Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${baseUrl}ByListingId/${id}`);\n  }\n\n  getCommentsByUserId(id:any):Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${baseUrl}ByUserId/${id}`);\n  }\n\n  get(id: any): Observable<Comment> {\n    return this.http.get<Comment>(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}