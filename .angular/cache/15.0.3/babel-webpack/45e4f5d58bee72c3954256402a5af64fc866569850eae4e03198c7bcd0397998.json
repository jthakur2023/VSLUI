{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/listings';\nexport class ListingService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  listingByUser(id) {\n    return this.http.get(`${baseUrl}ByUser/${id}`);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByUniversity(university) {\n    return this.http.get(`${baseUrl}?university=${university}`);\n  }\n  findBySemester(semester) {\n    return this.http.get(`${baseUrl}?semester=${semester}`);\n  }\n  fileUpload(data) {\n    return this.http.post(`${baseUrl}/upload`, data);\n  }\n}\nListingService.ɵfac = function ListingService_Factory(t) {\n  return new (t || ListingService)(i0.ɵɵinject(i1.HttpClient));\n};\nListingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListingService,\n  factory: ListingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,oCAAoC;AAKpD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAYL,OAAO,CAAC;EAC1C;EAGAM,aAAa,CAACC,EAAM;IAClB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,UAAUO,EAAE,EAAE,CAAC;EAC3D;EAEAF,GAAG,CAACE,EAAO;IACT,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,IAAIO,EAAE,EAAE,CAAC;EACnD;EAEAC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACV,OAAO,EAAES,IAAI,CAAC;EACtC;EAEAE,MAAM,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,GAAGZ,OAAO,IAAIO,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,MAAM,CAACN,EAAO;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACU,MAAM,CAAC,GAAGb,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC7C;EAEAO,SAAS;IACP,OAAO,IAAI,CAACX,IAAI,CAACU,MAAM,CAACb,OAAO,CAAC;EAClC;EAEAe,gBAAgB,CAACC,UAAe;IAC9B,OAAO,IAAI,CAACb,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,eAAegB,UAAU,EAAE,CAAC;EACxE;EACAC,cAAc,CAACC,QAAa;IAC1B,OAAO,IAAI,CAACf,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,aAAakB,QAAQ,EAAE,CAAC;EACpE;EAEAC,UAAU,CAACV,IAAa;IACtB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAGV,OAAO,SAAS,EAAES,IAAI,CAAC;EAClD;;AA1CWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAmB,SAAdnB,cAAc;EAAAoB,YAFb;AAAM","names":["baseUrl","ListingService","constructor","http","getAll","get","listingByUser","id","create","data","post","update","put","delete","deleteAll","findByUniversity","university","findBySemester","semester","fileUpload","factory","providedIn"],"sourceRoot":"","sources":["/Users/lakshman/projects/VSLUI/src/app/services/listing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Listing } from '../models/Listing.model';\n\nconst baseUrl = 'http://localhost:8080/api/listings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Listing[]> {\n    return this.http.get<Listing[]>(baseUrl);\n  }\n\n\n  listingByUser(id:any):Observable<Listing[]> {\n    return this.http.get<Listing[]>(`${baseUrl}ByUser/${id}`);\n  }\n\n  get(id: any): Observable<Listing> {\n    return this.http.get<Listing>(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByUniversity(university: any): Observable<Listing[]> {\n    return this.http.get<Listing[]>(`${baseUrl}?university=${university}`);\n  }\n  findBySemester(semester: any): Observable<Listing[]> {\n    return this.http.get<Listing[]>(`${baseUrl}?semester=${semester}`);\n  }\n\n  fileUpload(data:FormData): Observable<any> {\n    return this.http.post(`${baseUrl}/upload`, data);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}